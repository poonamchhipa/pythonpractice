# -*- coding: utf-8 -*-
"""comprehensions&basics.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GX1Ce0nYNjW8_xXob5lx_kxbRNNHGmli
"""

#List comprehension=>concise way to create a list
#syntax:
#[expression for item in iterable if condition]
#normal code=>
newlist=[]
for i in range(1,10):
  newlist.append(i)
print(newlist)
#list comprehension=>
newlist=[i for i in range(1,10)]
print(newlist)

squares = [x**2 for x in range(10)]
print(squares)

even_numbers = [x for x in range(10) if x % 2 == 0]
print(even_numbers)

labels = ["Even" if x % 2 == 0 else "Odd" for x in range(5)]
print(labels)

#Dictionary Comprehension =>
#syntax:[expression for item in iterable if condition]

{i:i for i in range(1,10)}

{x: x**2 for x in range(5)}

{x: x**2 for x in range(10) if x % 2 == 0}

original = {'a': 1, 'b': 2, 'c': 3}
swapped = {v: k for k, v in original.items()}
print(swapped)

# Set Comprehension
# Used to create sets (unique values only)
#syntax:{expression for item in iterable if condition}

{i:1 for i in range(1,10)}

{x**2 for x in range(6)}

{x for x in range(10) if x % 2 == 0}

#membership operator=>
60 in [1,2,3,4,60]

#identity operator=>used to check memory address
x=10
a=x
print(id(a),id(x))
x is a

x=10
a=10
print(id(a),id(x))
x is a
#python store 0-255 numbers in cache memory,in this two values have same memory address

x=257
a=257
print(id(a),id(x))
x is a

x=257
a=x
print(id(a),id(x))
a is x

